/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Cinema": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CinemaResponseDTOPaginatedResponse"];
            "application/json": components["schemas"]["CinemaResponseDTOPaginatedResponse"];
            "text/json": components["schemas"]["CinemaResponseDTOPaginatedResponse"];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateCinemaDTO"];
          "text/json": components["schemas"]["CreateCinemaDTO"];
          "application/*+json": components["schemas"]["CreateCinemaDTO"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CinemaResponseDTO"];
            "application/json": components["schemas"]["CinemaResponseDTO"];
            "text/json": components["schemas"]["CinemaResponseDTO"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Cinema/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CinemaResponseDTO"];
            "application/json": components["schemas"]["CinemaResponseDTO"];
            "text/json": components["schemas"]["CinemaResponseDTO"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateCinemaDTO"];
          "text/json": components["schemas"]["UpdateCinemaDTO"];
          "application/*+json": components["schemas"]["UpdateCinemaDTO"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CinemaResponseDTO"];
            "application/json": components["schemas"]["CinemaResponseDTO"];
            "text/json": components["schemas"]["CinemaResponseDTO"];
          };
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Movie": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          pageNumber?: number;
          pageSize?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["MoviePaginatedResponse"];
            "application/json": components["schemas"]["MoviePaginatedResponse"];
            "text/json": components["schemas"]["MoviePaginatedResponse"];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": string;
          "text/json": string;
          "application/*+json": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Movie/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": string;
          "text/json": string;
          "application/*+json": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Booking: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      bookingId?: string;
      /** Format: uuid */
      userId?: string | null;
      /** Format: uuid */
      showtimeId?: string;
      /** Format: uuid */
      promotionId?: string | null;
      /** Format: double */
      totalPrice?: number;
      status: string;
      showtime?: components["schemas"]["Showtime"];
      user?: components["schemas"]["User"];
      promotion?: components["schemas"]["Promotion"];
      bookingSeats?: components["schemas"]["BookingSeat"][] | null;
      bookingQrCode?: components["schemas"]["BookingQrCode"];
      payments?: components["schemas"]["Payment"][] | null;
    };
    BookingQrCode: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      qrCodeId?: string;
      /** Format: uuid */
      bookingId?: string;
      qrCodeData: string;
      /** Format: date-time */
      generatedAt?: string;
      /** Format: date-time */
      expiredAt?: string | null;
      isUsed: boolean;
      booking?: components["schemas"]["Booking"];
    };
    BookingSeat: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      bookingSeatId?: string;
      /** Format: uuid */
      bookingId?: string;
      /** Format: uuid */
      seatId?: string;
      booking?: components["schemas"]["Booking"];
      seat?: components["schemas"]["Seat"];
    };
    Cinema: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      cinemaId?: string;
      name: string;
      address: string;
      city?: string | null;
      rooms?: components["schemas"]["Room"][] | null;
    };
    CinemaResponseDTO: {
      /** Format: uuid */
      cinemaId?: string;
      name?: string | null;
      address?: string | null;
      city?: string | null;
      /** Format: date-time */
      createdAt?: string | null;
      imageUrl?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    CinemaResponseDTOPaginatedResponse: {
      items?: components["schemas"]["CinemaResponseDTO"][] | null;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      pageNumber?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      readonly hasPreviousPage?: boolean;
      readonly hasNextPage?: boolean;
    };
    CreateCinemaDTO: {
      name: string;
      address: string;
      city?: string | null;
    };
    DateOnly: {
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      month?: number;
      /** Format: int32 */
      day?: number;
      dayOfWeek?: components["schemas"]["DayOfWeek"];
      /** Format: int32 */
      readonly dayOfYear?: number;
      /** Format: int32 */
      readonly dayNumber?: number;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    DayOfWeek: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    Movie: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      movieId?: string;
      title: string;
      description?: string | null;
      genre?: string | null;
      /** Format: int32 */
      duration?: number;
      releaseDate?: components["schemas"]["DateOnly"];
      posterUrl?: string | null;
      status: string;
      director?: string | null;
      actors?: string | null;
      showtimes?: components["schemas"]["Showtime"][] | null;
    };
    MoviePaginatedResponse: {
      items?: components["schemas"]["Movie"][] | null;
      /** Format: int32 */
      totalItems?: number;
      /** Format: int32 */
      pageNumber?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      totalPages?: number;
      readonly hasPreviousPage?: boolean;
      readonly hasNextPage?: boolean;
    };
    Notification: {
      /** Format: uuid */
      notificationId?: string;
      /** Format: uuid */
      userId?: string | null;
      title?: string | null;
      content?: string | null;
      type?: string | null;
      status?: string | null;
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      user?: components["schemas"]["User"];
    };
    Payment: {
      /** Format: uuid */
      paymentId?: string;
      /** Format: uuid */
      bookingId?: string;
      /** Format: uuid */
      userId?: string | null;
      /** Format: double */
      amount?: number;
      paymentMethod?: string | null;
      paymentStatus?: string | null;
      transactionId?: string | null;
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      booking?: components["schemas"]["Booking"];
      user?: components["schemas"]["User"];
    };
    Promotion: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      promotionId?: string;
      code: string;
      description?: string | null;
      /** Format: double */
      discountPercentage?: number | null;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      isActive?: boolean | null;
      bookings?: components["schemas"]["Booking"][] | null;
    };
    Room: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      roomId?: string;
      /** Format: uuid */
      cinemaId?: string;
      roomNumber: string;
      /** Format: int32 */
      totalSeats?: number;
      cinema?: components["schemas"]["Cinema"];
      seats?: components["schemas"]["Seat"][] | null;
      showtimes?: components["schemas"]["Showtime"][] | null;
    };
    Seat: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      seatId?: string;
      /** Format: uuid */
      roomId?: string;
      row: string;
      /** Format: int32 */
      seatColumn?: number;
      seatNumber?: string | null;
      seatType?: string | null;
      isAvailable?: boolean | null;
      room?: components["schemas"]["Room"];
      bookingSeats?: components["schemas"]["BookingSeat"][] | null;
    };
    Showtime: {
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      /** Format: uuid */
      showtimeId?: string;
      /** Format: uuid */
      movieId?: string;
      /** Format: uuid */
      roomId?: string;
      /** Format: date-time */
      startTime?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: double */
      ticketPrice?: number;
      movie?: components["schemas"]["Movie"];
      room?: components["schemas"]["Room"];
      bookings?: components["schemas"]["Booking"][] | null;
    };
    UpdateCinemaDTO: {
      name: string;
      address: string;
      city?: string | null;
    };
    User: {
      /** Format: uuid */
      id?: string;
      userName?: string | null;
      normalizedUserName?: string | null;
      normalizedEmail?: string | null;
      emailConfirmed?: boolean;
      passwordHash?: string | null;
      securityStamp?: string | null;
      concurrencyStamp?: string | null;
      phoneNumberConfirmed?: boolean;
      twoFactorEnabled?: boolean;
      /** Format: date-time */
      lockoutEnd?: string | null;
      lockoutEnabled?: boolean;
      /** Format: int32 */
      accessFailedCount?: number;
      email: string;
      fullName?: string | null;
      phoneNumber?: string | null;
      address?: string | null;
      imageUrl?: string | null;
      /** Format: date-time */
      dateOfBirth?: string | null;
      /** Format: date-time */
      createdAt?: string | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      deletedAt?: string | null;
      bookings?: components["schemas"]["Booking"][] | null;
      notifications?: components["schemas"]["Notification"][] | null;
      payments?: components["schemas"]["Payment"][] | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
